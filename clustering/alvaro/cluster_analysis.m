% This script is developed to have all the code developed for cluster
% analysis under the same language (Matlab) so it's easier to adapt all
% changes more straightforward. The main functions in this analysis will
% merge the .mat files generated in the binarization for each experiment.
% It will generate plots for Normalized Area Distribution (NAD), NAD for areas > 2,
% Probability of different size of clusters. Also it will aply different
% statistics to determine differences in Area Distribution per time with
% the Kruskal-Wallis test and the post-hoc Wilcoxon.
% INPUT: folder with the .mat files of a given experiment generated by the
% image_script_analysis.m.
% OUTPUT: A plot folder with the plots generated. A test folder with the
% test files in .csv
% Raya-Marin, Alvaro. 25.04.2024.

% Specify the folder of interest with the .mat files. If you're to compare
% more than one experiment at time, specify each folder separately.
pathOne = ['C:\Users\uib\Nextcloud\LAB\Wetlab\Yeast_experiments\Clustering ' ...
    'experiments\Exps_clustering_20240327_tiff\SK1_1000_30_0.1zymo'];
pathTwo = ['C:\Users\uib\Nextcloud\LAB\Wetlab\Yeast_experiments\Clustering ' ...
        'experiments\Exps_clustering_20240327_tiff\SK1_1000_30'];

% The combineMatFiles is the function that will combine all .mat files with 
% the results. It has four inputs, the path to the folder and the name of the
% experiment path, zymoliase concentration (mg/mL), shaking rpm and temperature. 
% The output is a struct with all the data combined.

mat_combinedOne = combineMatFiles(pathOne, 0.05, 250, 30);
mat_combinedTwo = combineMatFiles(pathTwo, 0, 250, 30);

% Combine tables: add inside the square brackets each mat file to combine
mat_combined = [mat_combinedOne; mat_combinedTwo];


% Clean up weird cell shapes. An SVM model with > 99% of accuracy
% distinguishes between weird shapes produced in the binarization and good
% shaped cells to delete weird shaped cell's rows.
mat_cleaned = clean_weird_shapes(mat_combined);

% Plots function will generate the plots specified in the function. 
% INPUT: mat_combined file, number of bins and the path to save the plots.
plots(mat_cleaned, pathOne);

% Tests function will apply the test specified in the function. 
% INPUT: mat_combined file and path to store the results.
tests(mat_cleaned, path);





